{
    "projects": [
        {
            "uuid": "1efea105-653b-6f00-a241-a18ae7132a14",
            "title": "Test",
            "description": "Hello World",
            "parameter": {
                "numbers": [
                    {
                        "name": "frameCount",
                        "value": 0
                    },
                    {
                        "name": "iframeCount",
                        "value": 0
                    },
                    {
                        "name": "iframe_gap",
                        "value": 5
                    },
                    {
                        "name": "lut_thread",
                        "value": 5
                    },
                    {
                        "name": "group_size",
                        "value": 20
                    }
                ],
                "strings": [
                    {
                        "name": "root",
                        "value": "G:/Developer/Funique/4DGS/Test",
                        "s": false
                    },
                    {
                        "name": "output",
                        "value": "G:/Developer/Funique/4DGS/Test/out"
                    },
                    {
                        "name": "prepare",
                        "value": "Prepare"
                    },
                    {
                        "name": "before",
                        "value": "before"
                    },
                    {
                        "name": "after",
                        "value": "after"
                    },
                    {
                        "name": "CAM",
                        "value": "CAM"
                    },
                    {
                        "name": "images",
                        "value": "images"
                    },
                    {
                        "name": "sparse",
                        "value": "sparse"
                    }
                ],
                "booleans": []
            },
            "task": [
                {
                    "uuid": "1efea105-653b-6f02-8683-2497a8bbe3a9",
                    "title": "整理階段",
                    "description": "從原始資料夾結構 弄成可以工作的樣子",
                    "cronjob": false,
                    "cronjobKey": "",
                    "multi": false,
                    "multiKey": "",
                    "jobs": [
                        {
                            "uuid": "1efea105-653b-6f01-8c8b-8c16fdc11788",
                            "type": 7,
                            "lua": "function split(s, sep)\n    local fields = {}\n    local sep = sep or \" \"\n    local pattern = string.format(\"([^%s]+)\", sep)\n    string.gsub(s, pattern, function(c) fields[#fields + 1] = c end)\n    return fields\nend\n\nm.messager(\"Env Init\")\n\nlocal root = env.getstring(\"root\")\nlocal prepare_folder = env.getstring(\"prepare\")\nlocal before_folder = env.getstring(\"before\")\nlocal after_folder = env.getstring(\"after\")\nlocal output_folder = env.getstring(\"output\")\n\nlocal CAM = env.getstring(\"CAM\")\nlocal images = env.getstring(\"images\")\nlocal sparse = env.getstring(\"sparse\")\n\no.deletedir(root..\"/\"..before_folder)\no.deletedir(root..\"/\"..after_folder)\no.deletedir(output_folder)\no.createdir(root..\"/\"..before_folder)\no.createdir(root..\"/\"..after_folder)\no.createdir(output_folder)\n\nm.messager(\"Get CAM list\")\nlocal prepare_folders = split(o.listdir(root..\"/\"..prepare_folder..\"/\"..CAM), \"\\n\")\n\nlocal cam_size = #(prepare_folders)\nm.messager(\"Get CAM count: \"..cam_size)\n\nlocal frame_size = 0\nif cam_size > 0 then\n    local f1_files = split(o.listfile(root..\"/\"..prepare_folder..\"/\"..CAM..\"/\"..prepare_folders[1]), \"\\n\")\n    frame_size = #(f1_files)\nend\nm.messager(\"Get Frame count: \"..frame_size)\n\nm.messager(\"Copy sparse folder\")\no.copydir(root..\"/\"..prepare_folder..\"/\"..sparse, root..\"/\"..before_folder..\"/\"..sparse)\n\nfor key=1,frame_size,1 do\n    o.createdir(root..\"/\"..before_folder..\"/\"..tostring(key)..\"/images\")\n    for key2=1,cam_size,1 do\n        local from = root..\"/\"..prepare_folder..\"/\"..CAM..\"/C\"..string.format(\"%04d\", key2)..\"/\"..string.format(\"%04d\", key2)..\"_\"..string.format(\"%06d\", key)..\".jpg\"\n        local to = root..\"/\"..before_folder..\"/\"..tostring(key)..\"/images/\"..string.format(\"%04d\", key2)..\".jpg\"\n        o.copyfile(from, to)\n    end\nend\n\nenv.setnumber(\"frameCount\", frame_size)\n\n",
                            "string_args": [],
                            "number_args": [],
                            "boolean_args": []
                        }
                    ]
                },
                {
                    "uuid": "1efea105-653b-6f07-94a2-9c1203821350",
                    "title": "運算資料準備",
                    "description": "利用 Colmap 工具生成 .bin 資料",
                    "cronjob": true,
                    "cronjobKey": "frameCount",
                    "multi": false,
                    "multiKey": "",
                    "jobs": [
                        {
                            "uuid": "1efea105-653b-6f03-b87a-7786ca5112db",
                            "type": 5,
                            "lua": "",
                            "string_args": [
                                "%root%/%before%/%ck%/sparse"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f04-a9ce-ef8bd32a0726",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%before%/%ck%",
                                "colmap",
                                "feature_extractor --database_path sparse/database.db --image_path images"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f05-ab90-d6ad63c3de84",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%before%/%ck%",
                                "colmap",
                                "exhaustive_matcher --database_path sparse/database.db"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f06-bdda-4e6906bb89a6",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%before%/%ck%",
                                "colmap",
                                "point_triangulator --database sparse/database.db --image_path images --input_path ../sparse/0/TXT/edit --output_path sparse"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        }
                    ]
                },
                {
                    "uuid": "1efea105-653b-6f0b-9e4c-5b9aa23559b8",
                    "title": "生成 I Frame",
                    "description": "生成完整 Frame",
                    "cronjob": false,
                    "cronjobKey": "",
                    "multi": false,
                    "multiKey": "",
                    "jobs": [
                        {
                            "uuid": "1efea105-653b-6f08-8334-9004fe0b1702",
                            "type": 5,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%/GOP20_I"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f09-bdae-bfdf0f7f158f",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%",
                                "python",
                                "train_sequence.py --start 0 --end %frameCount% --cuda 0 --data %root%/%before% --output %root%/%after%/GOP20_I --sh 3 --interval %iframe_gap% --group_size 1 --resolution 1"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f0a-b405-70de00e1cb5e",
                            "type": 7,
                            "lua": "function split(s, sep)\n    local fields = {}\n    local sep = sep or \" \"\n    local pattern = string.format(\"([^%s]+)\", sep)\n    string.gsub(s, pattern, function(c) fields[#fields + 1] = c end)\n    return fields\nend\n\nlocal root = env.getstring(\"root\")\nlocal after_folder = env.getstring(\"after\")\n\nm.messager(\"Get CAM list\")\nlocal iframe_folders = split(o.listdir(root..\"/\"..after_folder..\"/\"..\"GOP20_I\"), \"\\n\")\n\nlocal iframeCount = #(iframe_folders)\nm.messager(\"Get IFrame count: \"..iframeCount)\n\nfor key,value in pairs(iframe_folders) do\n    local from = root..\"/\"..after_folder..\"/\"..\"GOP20_I\"..\"/\"..tostring(value)\n    local to = root..\"/\"..after_folder..\"/\"..\"GOP20_I\"..\"/\"..tostring(key)\n    o.rename(from, to)\nend\n\nenv.setnumber(\"iframeCount\", iframeCount)\n\n",
                            "string_args": [],
                            "number_args": [],
                            "boolean_args": []
                        }
                    ]
                },
                {
                    "uuid": "1efea105-653b-6f0f-aed5-6305170592a9",
                    "title": "降躁處理",
                    "description": "把渣渣刪掉 !",
                    "cronjob": true,
                    "cronjobKey": "iframeCount",
                    "multi": false,
                    "multiKey": "",
                    "jobs": [
                        {
                            "uuid": "1efea105-653b-6f0c-bf0c-e5daf7afd661",
                            "type": 6,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%/GOP20_I/%ck%/point_cloud/iteration_7000/point_cloud.ply",
                                "%root%/%after%/GOP20_I/%ck%/point_cloud/iteration_7000/point_cloud_before.ply"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f0d-bd7b-8f8d102eb203",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%/GOP20_I/%ck%/point_cloud/iteration_7000",
                                "ply_denoise",
                                "-i point_cloud_before.ply -o point_cloud.ply"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f0e-b679-a09d88cca6f0",
                            "type": 2,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%/GOP20_I/%ck%/point_cloud/iteration_7000/point_cloud_before.ply"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        }
                    ]
                },
                {
                    "uuid": "1efea105-653b-6f15-9377-b92f5969fb40",
                    "title": "Blend 資料準備",
                    "description": "生成多個 checkpoint 資料夾",
                    "cronjob": false,
                    "cronjobKey": "",
                    "multi": false,
                    "multiKey": "",
                    "jobs": [
                        {
                            "uuid": "1efea105-653b-6f10-9978-b8e5e29c018f",
                            "type": 7,
                            "lua": "function split(s, sep)\n    local fields = {}\n    local sep = sep or \" \"\n    local pattern = string.format(\"([^%s]+)\", sep)\n    string.gsub(s, pattern, function(c) fields[#fields + 1] = c end)\n    return fields\nend\n\nlocal root = env.getstring(\"root\")\nlocal after_folder = env.getstring(\"after\")\nlocal iframe_gap = env.getnumber(\"iframe_gap\")\n\nm.messager(\"Get CAM list\")\nlocal iframe_folders = split(o.listdir(root..\"/\"..after_folder..\"/\"..\"GOP20_I\"), \"\\n\")\n\nlocal iframeCount = #(iframe_folders)\nm.messager(\"Get IFrame count: \"..iframeCount)\n\nfor key,value in pairs(iframe_folders) do\n    local from = root..\"/\"..after_folder..\"/\"..\"GOP20_I\"..\"/\"..tostring(value)\n    local to = root..\"/\"..after_folder..\"/\"..tostring(key * iframe_gap)\n    o.copydir(from, to)\nend\no.deletedir(root..\"/\"..after_folder..\"/\"..\"GOP20_I\")\n",
                            "string_args": [],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f11-9a7e-c4c3c447eace",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%",
                                "python",
                                "train_sequence.py --start %{ iframe_gap * 0 }% --end %frameCount% --cuda 0 --data C:\u000bideogsVideoGSdatasetsB --output %root%/%after% --sh 3 --interval 1 --group_size %group_size% --resolution 1"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f12-adb0-5a36e912b59d",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%",
                                "python",
                                "train_sequence.py --start %{ iframe_gap * 1 }% --end %frameCount% --cuda 0 --data C:\u000bideogsVideoGSdatasetsB --output %root%/%after% --sh 3 --interval 1 --group_size %group_size% --resolution 1"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f13-a28f-b71c696760b8",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%",
                                "python",
                                "train_sequence.py --start %{ iframe_gap * 2 }% --end %frameCount% --cuda 0 --data C:\u000bideogsVideoGSdatasetsB --output %root%/%after% --sh 3 --interval 1 --group_size %group_size% --resolution 1"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        },
                        {
                            "uuid": "1efea105-653b-6f14-b674-bd364b2c6382",
                            "type": 8,
                            "lua": "",
                            "string_args": [
                                "%root%/%after%",
                                "python",
                                "train_sequence.py --start %{ iframe_gap * 3 }% --end %frameCount% --cuda 0 --data C:\u000bideogsVideoGSdatasetsB --output %root%/%after% --sh 3 --interval 1 --group_size %group_size% --resolution 1"
                            ],
                            "number_args": [],
                            "boolean_args": []
                        }
                    ]
                },
                {
                    "uuid": "1efea105-653b-6f16-9eec-7e86727ad268",
                    "title": "Blending",
                    "description": "生成 ply 序列!!",
                    "cronjob": false,
                    "cronjobKey": "",
                    "multi": false,
                    "multiKey": "",
                    "jobs": []
                },
                {
                    "uuid": "1efea105-653b-6f17-b3bc-9d17d497f6dd",
                    "title": "Lut",
                    "description": "顏色校準",
                    "cronjob": false,
                    "cronjobKey": "",
                    "multi": true,
                    "multiKey": "lut_thread",
                    "jobs": []
                }
            ]
        }
    ],
    "nodes": []
}